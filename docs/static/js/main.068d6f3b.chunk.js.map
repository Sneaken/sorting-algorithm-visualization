{"version":3,"sources":["hooks/useForceUpdate.ts","contexts/ConfigContext.ts","pages/BubbleSort.tsx","pages/CocktailSort.tsx","pages/AllSort.tsx","components/ConfigProvider.tsx","utils/GenerateData.ts","components/Configurator.tsx","App.tsx","index.tsx"],"names":["useForceUpdate","useReducer","v","defaultConfig","count","data","delay","useRAF","isContinue","isSorting","ConfigContext","React","createContext","BubbleSort","useContext","history","useHistory","useState","arr","setArr","forceUpdate","isSortingRef","useRef","isContinueRef","useRAFRef","delayRef","current","arrRef","iRef","jRef","currentCountRef","shouldSwapRef","changeData","useCallback","JSON","parse","stringify","init","useEffect","bubbleSort","list","i","length","j","status","undefined","value","swap","sortData","result","requestAnimationFrame","setTimeout","onClick","push","className","map","classnames","style","width","height","CocktailSort","leftRef","rightRef","directionRef","shouldLeftSwapRef","shouldRightSwapRef","isSortedToLeftRef","isSortedToRightRef","dataLength","cocktailSort","left","AllSort","reducer","state","action","type","payload","ConfigProvider","children","config","dispatch","Provider","generateArray","seed","Array","fill","item","index","Math","random","generateOutOfOrderArray","shuffle","array","randomIndex","tempItem","floor","Configurator","handleCountChange","event","Number","target","handleDelayChange","handleDataChange","handleDataSort","handleSortContinue","handleRequestAnimationFrameChange","onChange","disabled","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.068d6f3b.chunk.js","sourcesContent":["import { useReducer } from 'react';\n\nexport function useForceUpdate() {\n  const [, forceUpdate] = useReducer((v) => v + 1, 0);\n  return forceUpdate;\n}\n","import React from 'react';\n\nexport const defaultConfig = {\n  // 数据数量\n  count: 100,\n  data: [],\n  // 延迟 单位 ms\n  delay: 100,\n  useRAF: false,\n  // 是否继续\n  isContinue: true,\n  // 是否在排序\n  isSorting: false,\n} as any;\nconst ConfigContext = React.createContext(defaultConfig);\n\nexport default ConfigContext;\n","import classnames from 'classnames';\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useForceUpdate } from '../hooks/useForceUpdate';\nimport ConfigContext from '../contexts/ConfigContext';\n\ninterface ItemData {\n  status?: 'current' | 'finished' | 'target';\n  value: number;\n}\n\nconst BubbleSort = () => {\n  const { count, data, delay, isContinue, isSorting, useRAF } = useContext(ConfigContext);\n  const history = useHistory();\n  const [arr, setArr] = useState<ItemData[]>([]);\n  const forceUpdate = useForceUpdate();\n  const isSortingRef = useRef(false);\n  const isContinueRef = useRef<boolean>(true);\n  const useRAFRef = useRef<boolean>(false);\n  const delayRef = useRef(100);\n  isContinueRef.current = isContinue;\n  isSortingRef.current = isSorting;\n  useRAFRef.current = useRAF;\n  delayRef.current = delay;\n\n  const arrRef = useRef<ItemData[]>([]);\n  arrRef.current = arr;\n  const iRef = useRef<number>(0);\n  const jRef = useRef<number>(0);\n  const currentCountRef = useRef(0);\n\n  const shouldSwapRef = useRef(false);\n\n  const changeData = useCallback(() => {\n    setArr(JSON.parse(JSON.stringify(data)));\n    init()\n  }, [data]);\n  const init = () => {\n    isSortingRef.current = false;\n    iRef.current = 0;\n    jRef.current = 0;\n    currentCountRef.current = 0;\n  }\n  useEffect(() => {\n    changeData();\n  }, [changeData]);\n\n  const bubbleSort = useCallback((list: ItemData[]): ItemData[] => {\n    const i = iRef.current;\n    if (i < list.length) {\n      const j = jRef.current;\n      if (j < list.length - i - 1) {\n        if (list[j - 1]) {\n          list[j - 1].status = undefined;\n        }\n        list[j].status = 'current';\n        list[j + 1].status = 'target';\n        jRef.current++;\n        if (list[j].value > list[j + 1].value) {\n          if (shouldSwapRef.current) {\n            list[j].status = 'target';\n            list[j + 1].status = 'current';\n            const swap = list[j].value;\n            list[j].value = list[j + 1].value;\n            list[j + 1].value = swap;\n            shouldSwapRef.current = false;\n          } else {\n            jRef.current--;\n            shouldSwapRef.current = true;\n          }\n        }\n      } else {\n        iRef.current++;\n        jRef.current = 0;\n        if (list[j - 1]) {\n          list[j - 1].status = undefined;\n        }\n        list[j].status = 'finished';\n        currentCountRef.current++;\n      }\n      return [...list];\n    }\n    return [...list];\n  }, []);\n\n  const sortData = useCallback(() => {\n    if (!isContinueRef.current) return;\n    isSortingRef.current = true;\n    const result = bubbleSort(arrRef.current);\n    setArr(result);\n    if (currentCountRef.current !== result.length) {\n      useRAFRef.current ? requestAnimationFrame(sortData) : setTimeout(sortData, delayRef.current);\n    } else {\n      init()\n      forceUpdate();\n    }\n  }, [bubbleSort, forceUpdate]);\n  useEffect(() => {\n    if (isContinue && isSortingRef.current) {\n      sortData();\n    }\n  }, [isContinue, sortData, isSorting]);\n\n  return (\n    <div>\n      <p onClick={() => history.push('/bubble-sort')}>冒泡排序</p>\n      <div>\n        <div className='flex items-center justify-center'>\n          <div className='current w-6 h-6' />\n          当前\n          <div className='target w-6 h-6 ml-2' />\n          正在比较\n          <div className='finished w-6 h-6 ml-2' />\n          结束比较\n        </div>\n      </div>\n      <div className='m-20'>\n        {arr.map((i) => {\n          return (\n            <div\n              className={classnames('bg-black inline-block ml-px', i.status)}\n              key={i.value}\n              style={{\n                width: `calc(${100 / count}% - 1px)`,\n                height: `${i.value}px`,\n              }}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default BubbleSort;\n","import classnames from 'classnames';\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useForceUpdate } from '../hooks/useForceUpdate';\nimport ConfigContext from '../contexts/ConfigContext';\n\ninterface ItemData {\n  status?: 'current' | 'finished' | 'target';\n  value: number;\n}\n\nconst CocktailSort = () => {\n  const { count, data, delay, isContinue, isSorting, useRAF } = useContext(ConfigContext);\n  const history = useHistory();\n  const [arr, setArr] = useState<ItemData[]>([]);\n  const forceUpdate = useForceUpdate();\n  const isSortingRef = useRef(false);\n  const isContinueRef = useRef<boolean>(true);\n  const useRAFRef = useRef<boolean>(false);\n  const delayRef = useRef(100);\n  isContinueRef.current = isContinue;\n  isSortingRef.current = isSorting;\n  useRAFRef.current = useRAF;\n  delayRef.current = delay;\n\n  const arrRef = useRef<ItemData[]>([]);\n  arrRef.current = arr;\n  const leftRef = useRef(0);\n  const rightRef = useRef(0);\n  const iRef = useRef(0);\n  const jRef = useRef<number>(0);\n  const directionRef = useRef('toRight');\n  const shouldLeftSwapRef = useRef(false);\n  const shouldRightSwapRef = useRef(false);\n  const currentCountRef = useRef(0);\n  // 表示向左是否有序\n  const isSortedToLeftRef = useRef(true);\n  // 表示向右是否有序\n  const isSortedToRightRef = useRef(true);\n\n  const changeData = useCallback(() => {\n    setArr(JSON.parse(JSON.stringify(data)));\n    init(data.length)\n  }, [data]);\n  const init = (dataLength: number) => {\n    leftRef.current = 0;\n    rightRef.current = dataLength - 1;\n    iRef.current = 0;\n    jRef.current = 0;\n    currentCountRef.current = 0;\n    isSortedToLeftRef.current = true;\n    isSortedToRightRef.current = true;\n    directionRef.current = 'toRight';\n\n    shouldLeftSwapRef.current = false;\n    shouldRightSwapRef.current = false;\n  }\n  useEffect(() => {\n    changeData();\n  }, [changeData]);\n\n  const cocktailSort = useCallback((list: ItemData[]): ItemData[] => {\n    let left = leftRef.current;\n    let right = rightRef.current;\n\n    if (left < right) {\n      // 向右\n      if (directionRef.current === 'toRight') {\n        let i = iRef.current;\n        if (i < list.length - left - 1) {\n          if (list[i - 1] && list[i - 1].status !== 'finished') {\n            list[i - 1].status = undefined;\n          }\n          list[i].status = 'current';\n          list[i + 1].status = 'target';\n          iRef.current++;\n          if (list[i].value > list[i + 1].value) {\n            if (shouldLeftSwapRef.current) {\n              list[i].status = 'target';\n              list[i + 1].status = 'current';\n              const swap = list[i + 1].value;\n              list[i + 1].value = list[i].value;\n              list[i].value = swap;\n              shouldLeftSwapRef.current = false;\n              isSortedToRightRef.current = false;\n            } else {\n              iRef.current--;\n              shouldLeftSwapRef.current = true;\n              isSortedToRightRef.current = true;\n            }\n          }\n          directionRef.current = 'toRight';\n          return [...list];\n        }\n        directionRef.current = 'toLeftStart';\n      }\n\n      if (directionRef.current === 'toLeftStart') {\n        list[iRef.current].status = 'finished';\n        directionRef.current = 'toLeft';\n        isSortedToLeftRef.current = true;\n        rightRef.current--;\n        jRef.current = rightRef.current;\n        currentCountRef.current++;\n        return [...list];\n      }\n      if (isSortedToRightRef.current) {\n        currentCountRef.current = list.length;\n        return list.map((i) => ({ ...i, status: 'finished' }));\n      }\n\n      if (directionRef.current === 'toLeft') {\n        // 向左\n        let j = jRef.current;\n        if (j > left) {\n          if (list[j + 1] && list[j + 1].status !== 'finished') {\n            list[j + 1].status = undefined;\n          }\n          list[j].status = 'current';\n          list[j - 1].status = 'target';\n          jRef.current--;\n          if (list[j - 1].value > list[j].value) {\n            list[j].status = 'target';\n            list[j - 1].status = 'current';\n            if (shouldRightSwapRef.current) {\n              const swap = list[j].value;\n              list[j].value = list[j - 1].value;\n              list[j - 1].value = swap;\n              shouldRightSwapRef.current = false;\n              isSortedToLeftRef.current = false;\n            } else {\n              jRef.current++;\n              shouldRightSwapRef.current = true;\n              isSortedToLeftRef.current = true;\n            }\n          }\n          directionRef.current = 'toLeft';\n          return [...list];\n        }\n        directionRef.current = 'toRightStart';\n      }\n\n      if (directionRef.current === 'toRightStart') {\n        list[jRef.current].status = 'finished';\n        directionRef.current = 'toRight';\n        isSortedToRightRef.current = true;\n        leftRef.current++;\n        iRef.current = leftRef.current;\n        jRef.current = rightRef.current;\n        currentCountRef.current++;\n        return [...list];\n      }\n      if (isSortedToLeftRef.current) {\n        currentCountRef.current = list.length;\n        return list.map((i) => ({ ...i, status: 'finished' }));\n      }\n\n      return [...list];\n    }\n    list[left].status = 'finished';\n    return [...list];\n  }, []);\n\n  const sortData = useCallback(() => {\n    if (!isContinueRef.current) return;\n    isSortingRef.current = true;\n    const result = cocktailSort(arrRef.current);\n    setArr(result);\n    if (currentCountRef.current !== result.length) {\n      useRAFRef.current ? requestAnimationFrame(sortData) : setTimeout(sortData, delayRef.current);\n    } else {\n      init(result.length)\n      forceUpdate();\n    }\n  }, [cocktailSort, forceUpdate]);\n  useEffect(() => {\n    if (isContinue && isSortingRef.current) {\n      sortData();\n    }\n  }, [isContinue, sortData, isSorting]);\n\n  return (\n    <div>\n      <p onClick={() => history.push('/cocktail-sort')}>鸡尾酒排序</p>\n      <div>\n        <div className='flex items-center justify-center'>\n          <div className='current w-6 h-6' />\n          当前\n          <div className='target w-6 h-6 ml-2' />\n          正在比较\n          <div className='finished w-6 h-6 ml-2' />\n          结束比较\n        </div>\n      </div>\n      <div className='m-20'>\n        {arr.map((i) => {\n          return (\n            <div\n              className={classnames('bg-black inline-block ml-px', i.status)}\n              key={i.value}\n              style={{\n                width: `calc(${100 / count}% - 1px)`,\n                height: `${i.value}px`,\n              }}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default CocktailSort;\n","import React from 'react';\nimport BubbleSort from './BubbleSort';\nimport CocktailSort from './CocktailSort';\n\nconst AllSort = () => {\n  return (\n    <div>\n      <BubbleSort />\n      <CocktailSort />\n    </div>\n  );\n};\n\nexport default AllSort;\n","import React, { FC, useReducer } from 'react';\nimport ConfigContext, { defaultConfig } from '../contexts/ConfigContext';\n\nfunction reducer(state: any, action: any) {\n  switch (action.type) {\n    case 'init':\n      return { ...defaultConfig };\n    case 'changeData':\n      return { ...state, data: action.payload };\n    case 'changeCount':\n      return { ...state, count: action.payload };\n    case 'changeDelay':\n      return { ...state, delay: action.payload };\n    case 'toggleContinue':\n      return { ...state, isContinue: !state.isContinue };\n    case 'toggleSorting':\n      return { ...state, isSorting: !state.isSorting };\n    case 'toggleUseRAF':\n      return { ...state, useRAF: !state.useRAF };\n    default:\n      return { ...state, ...action };\n  }\n}\nconst ConfigProvider: FC = ({ children }) => {\n  const [config, dispatch] = useReducer(reducer, defaultConfig);\n  return <ConfigContext.Provider value={{ ...config, dispatch }}>{children}</ConfigContext.Provider>;\n};\n\nexport default ConfigProvider;\n","// 生成常规数组\nexport function generateArray(length: number, seed = false): number[] {\n  return new Array(length).fill(0).map((item, index) => index + (seed ? 0 : Math.random() * 200));\n}\n\n// 生成乱序数组\nexport function generateOutOfOrderArray(length: number, seed = false): number[] {\n  return shuffle(generateArray(length, seed));\n}\n\n// 洗牌算法\nexport function shuffle(array: number[]): number[] {\n  let arrayLength = array.length,\n    randomIndex, //随机数\n    tempItem; //临时存储元素\n  for (let i = arrayLength - 1; i >= 0; i--) {\n    randomIndex = Math.floor(Math.random() * (i + 1));\n    tempItem = array[randomIndex];\n    array[randomIndex] = array[i];\n    array[i] = tempItem;\n  }\n  return array;\n}\n","import React, { useCallback, useContext, useEffect } from 'react';\nimport ConfigContext from '../contexts/ConfigContext';\nimport { generateOutOfOrderArray } from '../utils/GenerateData';\n\nconst Configurator = () => {\n  const { count, delay, useRAF, isSorting, isContinue, dispatch } = useContext(ConfigContext);\n\n  const handleCountChange = useCallback(\n    (event) => {\n      dispatch({ type: 'changeCount', payload: Number(event.target.value) });\n    },\n    [dispatch],\n  );\n\n  const handleDelayChange = useCallback(\n    (event) => {\n      dispatch({ type: 'changeDelay', payload: Number(event.target.value) });\n    },\n    [dispatch],\n  );\n\n  const handleDataChange = useCallback(() => {\n    dispatch({ type: 'changeData', payload: generateOutOfOrderArray(count).map((i) => ({ value: i })) });\n  }, [dispatch, count]);\n\n  const handleDataSort = useCallback(() => {\n    dispatch({ type: 'toggleSorting' });\n  }, [dispatch]);\n\n  const handleSortContinue = useCallback(() => {\n    dispatch({ type: 'toggleContinue' });\n  }, [dispatch]);\n\n  const handleRequestAnimationFrameChange = useCallback(() => {\n    dispatch({ type: 'toggleUseRAF' });\n  }, [dispatch]);\n\n  useEffect(() => {\n    handleDataChange();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className='m-10'>\n      <div className='flex'>\n        <label className='flex-1'>\n          数据数量：\n          <input type='number' value={count || ''} onChange={handleCountChange} />\n        </label>\n        <label className='flex-1'>\n          延迟：\n          <input className='disabled:opacity-50' type='number' value={delay || ''} disabled={useRAF} onChange={handleDelayChange} />\n        </label>\n        <label className='flex-1 mr-1'>\n          <input type='checkbox' value={useRAF} onChange={handleRequestAnimationFrameChange} />\n          启用requestAnimationFrame\n        </label>\n      </div>\n      <button className='rounded-md p-1 bg-blue-400 text-white mr-1 disabled:opacity-50' onClick={handleDataChange} disabled={isSorting}>\n        更换数据\n      </button>\n      <button className='rounded-md p-1 bg-blue-400 text-white mr-1 disabled:opacity-50' onClick={handleDataSort} disabled={isSorting}>\n        开始\n      </button>\n      <button className='rounded-md p-1 bg-blue-400 text-white mr-1 disabled:opacity-50' onClick={handleSortContinue}>\n        {isContinue ? '暂停' : '继续'}\n      </button>\n    </div>\n  );\n};\n\nexport default Configurator;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport BubbleSort from './pages/BubbleSort';\nimport AllSort from './pages/AllSort';\nimport ConfigProvider from './components/ConfigProvider';\nimport Configurator from './components/Configurator';\nimport CocktailSort from './pages/CocktailSort';\n\nfunction App() {\n  return (\n    <>\n      <header>\n        <h1 className='m-0 text-center text-2xl'>排序算法可视化</h1>\n      </header>\n      <main className=''>\n        <ConfigProvider>\n          <Configurator />\n          <HashRouter>\n            <Switch>\n              <Route path='/' exact component={AllSort} />\n              <Route path='/bubble-sort' exact component={BubbleSort} />\n              <Route path='/cocktail-sort' exact component={CocktailSort} />\n            </Switch>\n          </HashRouter>\n        </ConfigProvider>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}