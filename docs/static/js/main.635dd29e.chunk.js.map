{"version":3,"sources":["hooks/useForceUpdate.ts","contexts/ConfigContext.ts","hooks/useConfig.ts","pages/BubbleSort.tsx","pages/CocktailSort.tsx","pages/SelectionSort.tsx","pages/AllSort.tsx","components/ConfigProvider.tsx","utils/GenerateData.ts","components/Configurator.tsx","App.tsx","index.tsx"],"names":["useForceUpdate","useReducer","v","defaultConfig","count","data","delay","useRAF","isContinue","isSorting","ConfigContext","React","createContext","useConfig","isSortingRef","useRef","isContinueRef","useRAFRef","delayRef","useEffect","current","BubbleSort","useContext","history","useHistory","useState","arr","setArr","forceUpdate","arrRef","iRef","jRef","currentCountRef","shouldSwapRef","init","useCallback","changeData","JSON","parse","stringify","bubbleSort","list","i","length","j","status","undefined","value","swap","sortData","result","requestAnimationFrame","setTimeout","onClick","push","className","map","classnames","style","width","height","CocktailSort","leftRef","rightRef","directionRef","shouldLeftSwapRef","shouldRightSwapRef","isSortedToLeftRef","isSortedToRightRef","dataLength","cocktailSort","left","SelectionSort","minIndexRef","selectionSort","minIndex","AllSort","reducer","state","action","type","payload","ConfigProvider","children","config","dispatch","Provider","generateArray","seed","Array","fill","item","index","Math","random","generateOutOfOrderArray","shuffle","array","randomIndex","tempItem","floor","Configurator","handleCountChange","event","Number","target","handleDelayChange","handleDataChange","handleDataSort","handleSortContinue","handleRequestAnimationFrameChange","onChange","disabled","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAEO,SAASA,IACd,MAAwBC,sBAAW,SAACC,GAAD,OAAOA,EAAI,IAAG,GACjD,OADA,oBCDK,IAAMC,EAAgB,CAE3BC,MAAO,IACPC,KAAM,GAENC,MAAO,IACPC,QAAQ,EAERC,YAAY,EAEZC,WAAW,GAIEC,EAFOC,IAAMC,cAAcT,GCLnC,SAASU,EAAT,GAAkF,IAA7DL,EAA4D,EAA5DA,WAAYC,EAAgD,EAAhDA,UAAWF,EAAqC,EAArCA,OAAQD,EAA6B,EAA7BA,MACnDQ,EAAeC,kBAAO,GACtBC,EAAgBD,kBAAO,GACvBE,EAAYF,kBAAO,GACnBG,EAAWH,iBAAO,KAkBxB,OAhBAI,qBAAU,WACRH,EAAcI,QAAUZ,IACvB,CAACA,IAEJW,qBAAU,WACRL,EAAaM,QAAUX,IACtB,CAACA,IAEJU,qBAAU,WACRF,EAAUG,QAAUb,IACnB,CAACA,IAEJY,qBAAU,WACRD,EAASE,QAAUd,IAClB,CAACA,IAEG,CAAEQ,eAAcE,gBAAeC,YAAWC,Y,WCkGpCG,EArHI,WACjB,MAA8DC,qBAAWZ,GAAjEN,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,MAAOE,EAA5B,EAA4BA,WAAYC,EAAxC,EAAwCA,UAAWF,EAAnD,EAAmDA,OAC7CgB,EAAUC,cAChB,EAAsBC,mBAAqB,IAA3C,mBAAOC,EAAP,KAAYC,EAAZ,KACMC,EAAc5B,IACpB,EAA6Da,EAAU,CAAEL,aAAYC,YAAWF,SAAQD,UAAhGQ,EAAR,EAAQA,aAAcE,EAAtB,EAAsBA,cAAeC,EAArC,EAAqCA,UAAWC,EAAhD,EAAgDA,SAE1CW,EAASd,iBAAmB,IAClCc,EAAOT,QAAUM,EACjB,IAAMI,EAAOf,iBAAe,GACtBgB,EAAOhB,iBAAe,GACtBiB,EAAkBjB,iBAAO,GAEzBkB,EAAgBlB,kBAAO,GAEvBmB,EAAOC,uBAAY,WACvBrB,EAAaM,SAAU,EACvBU,EAAKV,QAAU,EACfW,EAAKX,QAAU,EACfY,EAAgBZ,QAAU,IACzB,CAACN,IACEsB,EAAaD,uBAAY,WAC7BR,EAAOU,KAAKC,MAAMD,KAAKE,UAAUlC,KACjC6B,MACC,CAAC7B,EAAM6B,IAEVf,qBAAU,WACRiB,MACC,CAACA,IAEJ,IAAMI,EAAaL,uBAAY,SAACM,GAC9B,IAAMC,EAAIZ,EAAKV,QACf,GAAIsB,EAAID,EAAKE,OAAQ,CACnB,IAAMC,EAAIb,EAAKX,QACf,GAAIwB,EAAIH,EAAKE,OAASD,EAAI,GAOxB,GANID,EAAKG,EAAI,KACXH,EAAKG,EAAI,GAAGC,YAASC,GAEvBL,EAAKG,GAAGC,OAAS,UACjBJ,EAAKG,EAAI,GAAGC,OAAS,SACrBd,EAAKX,UACDqB,EAAKG,GAAGG,MAAQN,EAAKG,EAAI,GAAGG,MAC9B,GAAId,EAAcb,QAAS,CACzBqB,EAAKG,GAAGC,OAAS,SACjBJ,EAAKG,EAAI,GAAGC,OAAS,UACrB,IAAMG,EAAOP,EAAKG,GAAGG,MACrBN,EAAKG,GAAGG,MAAQN,EAAKG,EAAI,GAAGG,MAC5BN,EAAKG,EAAI,GAAGG,MAAQC,EACpBf,EAAcb,SAAU,OAExBW,EAAKX,UACLa,EAAcb,SAAU,OAI5BU,EAAKV,UACLW,EAAKX,QAAU,EACXqB,EAAKG,EAAI,KACXH,EAAKG,EAAI,GAAGC,YAASC,GAEvBL,EAAKG,GAAGC,OAAS,WACjBb,EAAgBZ,UAElB,OAAO,YAAIqB,GAEb,OAAO,YAAIA,KACV,IAEGQ,EAAWd,uBAAY,WAC3B,GAAKnB,EAAcI,QAAnB,CACAN,EAAaM,SAAU,EACvB,IAAM8B,EAASV,EAAWX,EAAOT,SACjCO,EAAOuB,GACHlB,EAAgBZ,UAAY8B,EAAOP,OACrC1B,EAAUG,QAAU+B,sBAAsBF,GAAYG,WAAWH,EAAU/B,EAASE,UAEpFc,IACAN,QAED,CAACY,EAAYtB,EAAUU,EAAaM,EAAMlB,EAAeF,EAAcG,IAO1E,OANAE,qBAAU,WACJX,GAAcM,EAAaM,SAC7B6B,MAED,CAACzC,EAAYyC,EAAUxC,EAAWK,IAGnC,gCACE,mBAAGuC,QAAS,kBAAM9B,EAAQ+B,KAAK,iBAA/B,sCACA,8BACE,sBAAKC,UAAU,mCAAf,UACE,qBAAKA,UAAU,oBADjB,eAGE,qBAAKA,UAAU,wBAHjB,2BAKE,qBAAKA,UAAU,0BALjB,gCASF,qBAAKA,UAAU,OAAf,SACG7B,EAAI8B,KAAI,SAACd,GACR,OACE,qBACEa,UAAWE,IAAW,8BAA+Bf,EAAEG,QAEvDa,MAAO,CACLC,MAAM,QAAD,OAAU,IAAMvD,EAAhB,YACLwD,OAAO,GAAD,OAAKlB,EAAEK,MAAP,QAHHL,EAAEK,gB,OC2FNc,EAnMM,WACnB,MAA8DvC,qBAAWZ,GAAjEN,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,MAAOE,EAA5B,EAA4BA,WAAYC,EAAxC,EAAwCA,UAAWF,EAAnD,EAAmDA,OAC7CgB,EAAUC,cAChB,EAAsBC,mBAAqB,IAA3C,mBAAOC,EAAP,KAAYC,EAAZ,KACMC,EAAc5B,IACpB,EAA6Da,EAAU,CAAEL,aAAYC,YAAWF,SAAQD,UAAhGQ,EAAR,EAAQA,aAAcE,EAAtB,EAAsBA,cAAeC,EAArC,EAAqCA,UAAWC,EAAhD,EAAgDA,SAE1CW,EAASd,iBAAmB,IAClCc,EAAOT,QAAUM,EACjB,IAAMoC,EAAU/C,iBAAO,GACjBgD,EAAWhD,iBAAO,GAClBe,EAAOf,iBAAO,GACdgB,EAAOhB,iBAAe,GACtBiD,EAAejD,iBAAO,WACtBkD,EAAoBlD,kBAAO,GAC3BmD,EAAqBnD,kBAAO,GAC5BiB,EAAkBjB,iBAAO,GAEzBoD,EAAoBpD,kBAAO,GAE3BqD,EAAqBrD,kBAAO,GAE5BmB,EAAOC,uBAAY,SAACkC,GACxBP,EAAQ1C,QAAU,EAClB2C,EAAS3C,QAAUiD,EAAa,EAChCvC,EAAKV,QAAU,EACfW,EAAKX,QAAU,EACfY,EAAgBZ,QAAU,EAC1B+C,EAAkB/C,SAAU,EAC5BgD,EAAmBhD,SAAU,EAC7B4C,EAAa5C,QAAU,UAEvB6C,EAAkB7C,SAAU,EAC5B8C,EAAmB9C,SAAU,IAC5B,IACGgB,EAAaD,uBAAY,WAC7BR,EAAOU,KAAKC,MAAMD,KAAKE,UAAUlC,KACjC6B,EAAK7B,EAAKsC,UACT,CAACtC,EAAM6B,IAEVf,qBAAU,WACRiB,MACC,CAACA,IAEJ,IAAMkC,EAAenC,uBAAY,SAACM,GAChC,IAAI8B,EAAOT,EAAQ1C,QAGnB,GAAImD,EAFQR,EAAS3C,QAEH,CAEhB,GAA6B,YAAzB4C,EAAa5C,QAAuB,CACtC,IAAIsB,EAAIZ,EAAKV,QACb,GAAIsB,EAAID,EAAKE,OAAS4B,EAAO,EAAG,CAO9B,GANI9B,EAAKC,EAAI,IAA6B,aAAvBD,EAAKC,EAAI,GAAGG,SAC7BJ,EAAKC,EAAI,GAAGG,YAASC,GAEvBL,EAAKC,GAAGG,OAAS,UACjBJ,EAAKC,EAAI,GAAGG,OAAS,SACrBf,EAAKV,UACDqB,EAAKC,GAAGK,MAAQN,EAAKC,EAAI,GAAGK,MAC9B,GAAIkB,EAAkB7C,QAAS,CAC7BqB,EAAKC,GAAGG,OAAS,SACjBJ,EAAKC,EAAI,GAAGG,OAAS,UACrB,IAAMG,EAAOP,EAAKC,EAAI,GAAGK,MACzBN,EAAKC,EAAI,GAAGK,MAAQN,EAAKC,GAAGK,MAC5BN,EAAKC,GAAGK,MAAQC,EAChBiB,EAAkB7C,SAAU,EAC5BgD,EAAmBhD,SAAU,OAE7BU,EAAKV,UACL6C,EAAkB7C,SAAU,EAC5BgD,EAAmBhD,SAAU,EAIjC,OADA4C,EAAa5C,QAAU,UAChB,YAAIqB,GAEbuB,EAAa5C,QAAU,cAGzB,GAA6B,gBAAzB4C,EAAa5C,QAOf,OANAqB,EAAKX,EAAKV,SAASyB,OAAS,WAC5BmB,EAAa5C,QAAU,SACvB+C,EAAkB/C,SAAU,EAC5B2C,EAAS3C,UACTW,EAAKX,QAAU2C,EAAS3C,QACxBY,EAAgBZ,UACT,YAAIqB,GAEb,GAAI2B,EAAmBhD,QAErB,OADAY,EAAgBZ,QAAUqB,EAAKE,OACxBF,EAAKe,KAAI,SAACd,GAAD,mBAAC,eAAYA,GAAb,IAAgBG,OAAQ,gBAG1C,GAA6B,WAAzBmB,EAAa5C,QAAsB,CAErC,IAAIwB,EAAIb,EAAKX,QACb,GAAIwB,EAAI2B,EAAM,CAOZ,GANI9B,EAAKG,EAAI,IAA6B,aAAvBH,EAAKG,EAAI,GAAGC,SAC7BJ,EAAKG,EAAI,GAAGC,YAASC,GAEvBL,EAAKG,GAAGC,OAAS,UACjBJ,EAAKG,EAAI,GAAGC,OAAS,SACrBd,EAAKX,UACDqB,EAAKG,EAAI,GAAGG,MAAQN,EAAKG,GAAGG,MAG9B,GAFAN,EAAKG,GAAGC,OAAS,SACjBJ,EAAKG,EAAI,GAAGC,OAAS,UACjBqB,EAAmB9C,QAAS,CAC9B,IAAM4B,EAAOP,EAAKG,GAAGG,MACrBN,EAAKG,GAAGG,MAAQN,EAAKG,EAAI,GAAGG,MAC5BN,EAAKG,EAAI,GAAGG,MAAQC,EACpBkB,EAAmB9C,SAAU,EAC7B+C,EAAkB/C,SAAU,OAE5BW,EAAKX,UACL8C,EAAmB9C,SAAU,EAC7B+C,EAAkB/C,SAAU,EAIhC,OADA4C,EAAa5C,QAAU,SAChB,YAAIqB,GAEbuB,EAAa5C,QAAU,eAGzB,MAA6B,iBAAzB4C,EAAa5C,SACfqB,EAAKV,EAAKX,SAASyB,OAAS,WAC5BmB,EAAa5C,QAAU,UACvBgD,EAAmBhD,SAAU,EAC7B0C,EAAQ1C,UACRU,EAAKV,QAAU0C,EAAQ1C,QACvBW,EAAKX,QAAU2C,EAAS3C,QACxBY,EAAgBZ,UACT,YAAIqB,IAET0B,EAAkB/C,SACpBY,EAAgBZ,QAAUqB,EAAKE,OACxBF,EAAKe,KAAI,SAACd,GAAD,mBAAC,eAAYA,GAAb,IAAgBG,OAAQ,iBAGnC,YAAIJ,GAGb,OADAA,EAAK8B,GAAM1B,OAAS,WACb,YAAIJ,KACV,IAEGQ,EAAWd,uBAAY,WAC3B,GAAKnB,EAAcI,QAAnB,CACAN,EAAaM,SAAU,EACvB,IAAM8B,EAASoB,EAAazC,EAAOT,SACnCO,EAAOuB,GACHlB,EAAgBZ,UAAY8B,EAAOP,OACrC1B,EAAUG,QAAU+B,sBAAsBF,GAAYG,WAAWH,EAAU/B,EAASE,UAEpFc,EAAKgB,EAAOP,QACZf,QAED,CAAC0C,EAAcpD,EAAUU,EAAaM,EAAMlB,EAAeF,EAAcG,IAO5E,OANAE,qBAAU,WACJX,GAAcM,EAAaM,SAC7B6B,MAED,CAACzC,EAAYyC,EAAUxC,EAAWK,IAGnC,gCACE,mBAAGuC,QAAS,kBAAM9B,EAAQ+B,KAAK,mBAA/B,4CACA,8BACE,sBAAKC,UAAU,mCAAf,UACE,qBAAKA,UAAU,oBADjB,eAGE,qBAAKA,UAAU,wBAHjB,2BAKE,qBAAKA,UAAU,0BALjB,gCASF,qBAAKA,UAAU,OAAf,SACG7B,EAAI8B,KAAI,SAACd,GACR,OACE,qBACEa,UAAWE,IAAW,8BAA+Bf,EAAEG,QAEvDa,MAAO,CACLC,MAAM,QAAD,OAAU,IAAMvD,EAAhB,YACLwD,OAAO,GAAD,OAAKlB,EAAEK,MAAP,QAHHL,EAAEK,gBC9DNyB,EAxHO,WACpB,MAA8DlD,qBAAWZ,GAAjEN,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,MAAOE,EAA5B,EAA4BA,WAAYC,EAAxC,EAAwCA,UAAWF,EAAnD,EAAmDA,OAC7CgB,EAAUC,cAChB,EAAsBC,mBAAqB,IAA3C,mBAAOC,EAAP,KAAYC,EAAZ,KACMC,EAAc5B,IACpB,EAA6Da,EAAU,CAAEL,aAAYC,YAAWF,SAAQD,UAAhGQ,EAAR,EAAQA,aAAcE,EAAtB,EAAsBA,cAAeC,EAArC,EAAqCA,UAAWC,EAAhD,EAAgDA,SAE1CW,EAASd,iBAAmB,IAClCc,EAAOT,QAAUM,EACjB,IAAMI,EAAOf,iBAAe,GACtBgB,EAAOhB,iBAAe,GACtB0D,EAAc1D,iBAAO,GACrBiB,EAAkBjB,iBAAO,GAEzBmB,EAAOC,uBAAY,WACvBrB,EAAaM,SAAU,EACvBU,EAAKV,QAAU,EACfW,EAAKX,QAAU,EACfqD,EAAYrD,QAAU,EACtBY,EAAgBZ,QAAU,IACzB,CAACN,IACEsB,EAAaD,uBAAY,WAC7BR,EAAOU,KAAKC,MAAMD,KAAKE,UAAUlC,KACjC6B,MACC,CAAC7B,EAAM6B,IAEVf,qBAAU,WACRiB,MACC,CAACA,IAEJ,IAAMsC,EAAgBvC,uBAAY,SAACM,GAKjC,GAJqB,IAAjBX,EAAKV,UAEPqB,EAAKgC,EAAYrD,SAASyB,OAAS,UAEjCf,EAAKV,QAAUqB,EAAKE,OAAS,EAAG,CAClC,IAAMgC,EAAWF,EAAYrD,QACvBwB,EAAIb,EAAKX,QACf,GAAIwB,EAAIH,EAAKE,OACPF,EAAKG,EAAI,IAA6B,YAAvBH,EAAKG,EAAI,GAAGC,SAC7BJ,EAAKG,EAAI,GAAGC,YAASC,GAEvBL,EAAKG,GAAGC,OAAS,UACbJ,EAAKG,GAAGG,MAAQN,EAAKkC,GAAU5B,QACjCN,EAAKkC,GAAU9B,YAASC,EACxB2B,EAAYrD,QAAUwB,EACtBH,EAAKgC,EAAYrD,SAASyB,OAAS,UAErCd,EAAKX,cACA,CACL,GAAIuD,IAAa7C,EAAKV,QAAS,CAC7B,IAAM4B,EAAOP,EAAKkC,GAAU5B,MAC5BN,EAAKkC,GAAU5B,MAAQN,EAAKX,EAAKV,SAAS2B,MAC1CN,EAAKX,EAAKV,SAAS2B,MAAQC,EAC3BP,EAAKkC,GAAU9B,YAASC,EAE1BL,EAAKX,EAAKV,SAASyB,OAAS,WAC5BJ,EAAKV,EAAKX,QAAU,GAAGyB,YAASC,EAChChB,EAAKV,UACLqD,EAAYrD,QAAUU,EAAKV,QAC3BW,EAAKX,QAAUU,EAAKV,QAAU,EAC9BY,EAAgBZ,UAChBqB,EAAKgC,EAAYrD,SAASyB,OAAS,SAErC,OAAO,YAAIJ,GAIb,OAFAA,EAAKX,EAAKV,SAASyB,OAAS,WAC5Bb,EAAgBZ,UACT,YAAIqB,KACV,IAEGQ,EAAWd,uBAAY,WAC3B,GAAKnB,EAAcI,QAAnB,CACAN,EAAaM,SAAU,EACvB,IAAM8B,EAASwB,EAAc7C,EAAOT,SACpCO,EAAOuB,GACHlB,EAAgBZ,UAAY8B,EAAOP,OACrC1B,EAAUG,QAAU+B,sBAAsBF,GAAYG,WAAWH,EAAU/B,EAASE,UAEpFc,IACAN,QAED,CAAC8C,EAAexD,EAAUU,EAAaM,EAAMlB,EAAeF,EAAcG,IAO7E,OANAE,qBAAU,WACJX,GAAcM,EAAaM,SAC7B6B,MAED,CAACzC,EAAYyC,EAAUxC,EAAWK,IAGnC,gCACE,mBAAGuC,QAAS,kBAAM9B,EAAQ+B,KAAK,oBAA/B,sCACA,8BACE,sBAAKC,UAAU,mCAAf,UACE,qBAAKA,UAAU,oBADjB,eAGE,qBAAKA,UAAU,wBAHjB,2BAKE,qBAAKA,UAAU,0BALjB,gCASF,qBAAKA,UAAU,OAAf,SACG7B,EAAI8B,KAAI,SAACd,GACR,OACE,qBACEa,UAAWE,IAAW,8BAA+Bf,EAAEG,QAEvDa,MAAO,CACLC,MAAM,QAAD,OAAU,IAAMvD,EAAhB,YACLwD,OAAO,GAAD,OAAKlB,EAAEK,MAAP,QAHHL,EAAEK,gBCxGN6B,EAVC,WACd,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCPN,SAASC,EAAQC,EAAYC,GAC3B,OAAQA,EAAOC,MACb,IAAK,OACH,OAAO,eAAK7E,GACd,IAAK,aACH,OAAO,2BAAK2E,GAAZ,IAAmBzE,KAAM0E,EAAOE,UAClC,IAAK,cACH,OAAO,2BAAKH,GAAZ,IAAmB1E,MAAO2E,EAAOE,UACnC,IAAK,cACH,OAAO,2BAAKH,GAAZ,IAAmBxE,MAAOyE,EAAOE,UACnC,IAAK,iBACH,OAAO,2BAAKH,GAAZ,IAAmBtE,YAAasE,EAAMtE,aACxC,IAAK,gBACH,OAAO,2BAAKsE,GAAZ,IAAmBrE,WAAYqE,EAAMrE,YACvC,IAAK,eACH,OAAO,2BAAKqE,GAAZ,IAAmBvE,QAASuE,EAAMvE,SACpC,QACE,OAAO,2BAAKuE,GAAUC,IAG5B,IAKeG,EALY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5B,EAA2BlF,qBAAW4E,EAAS1E,GAA/C,mBAAOiF,EAAP,KAAeC,EAAf,KACA,OAAO,cAAC,EAAcC,SAAf,CAAwBvC,MAAK,2BAAOqC,GAAP,IAAeC,aAA5C,SAAyDF,KCxB3D,SAASI,EAAc5C,GAAyC,IAAzB6C,EAAwB,wDACpE,OAAO,IAAIC,MAAM9C,GAAQ+C,KAAK,GAAGlC,KAAI,SAACmC,EAAMC,GAAP,OAAiBA,GAASJ,EAAO,EAAoB,IAAhBK,KAAKC,aAI1E,SAASC,EAAwBpD,GAAyC,IAAzB6C,EAAwB,wDAC9E,OAAOQ,EAAQT,EAAc5C,EAAQ6C,IAIhC,SAASQ,EAAQC,GAItB,IAHA,IACEC,EACAC,EACOzD,EAHSuD,EAAMtD,OAGG,EAAGD,GAAK,EAAGA,IAEpCyD,EAAWF,EADXC,EAAcL,KAAKO,MAAMP,KAAKC,UAAYpD,EAAI,KAE9CuD,EAAMC,GAAeD,EAAMvD,GAC3BuD,EAAMvD,GAAKyD,EAEb,OAAOF,ECjBT,IAmEeI,EAnEM,WACnB,MAAkE/E,qBAAWZ,GAArEN,EAAR,EAAQA,MAAOE,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,OAAQE,EAA9B,EAA8BA,UAAWD,EAAzC,EAAyCA,WAAY6E,EAArD,EAAqDA,SAE/CiB,EAAoBnE,uBACxB,SAACoE,GACClB,EAAS,CAAEL,KAAM,cAAeC,QAASuB,OAAOD,EAAME,OAAO1D,WAE/D,CAACsC,IAGGqB,EAAoBvE,uBACxB,SAACoE,GACClB,EAAS,CAAEL,KAAM,cAAeC,QAASuB,OAAOD,EAAME,OAAO1D,WAE/D,CAACsC,IAGGsB,EAAmBxE,uBAAY,WACnCkD,EAAS,CAAEL,KAAM,aAAcC,QAASc,EAAwB3F,GAAOoD,KAAI,SAACd,GAAD,MAAQ,CAAEK,MAAOL,UAC3F,CAAC2C,EAAUjF,IAERwG,EAAiBzE,uBAAY,WACjCkD,EAAS,CAAEL,KAAM,oBAChB,CAACK,IAEEwB,EAAqB1E,uBAAY,WACrCkD,EAAS,CAAEL,KAAM,qBAChB,CAACK,IAEEyB,EAAoC3E,uBAAY,WACpDkD,EAAS,CAAEL,KAAM,mBAChB,CAACK,IAOJ,OALAlE,qBAAU,WACRwF,MAEC,IAGD,sBAAKpD,UAAU,OAAf,UACE,sBAAKA,UAAU,OAAf,UACE,wBAAOA,UAAU,SAAjB,2CAEE,uBAAOyB,KAAK,SAASjC,MAAO3C,GAAS,GAAI2G,SAAUT,EAAmBU,SAAUvG,OAElF,wBAAO8C,UAAU,SAAjB,+BAEE,uBAAOA,UAAU,sBAAsByB,KAAK,SAASjC,MAAOzC,GAAS,GAAI0G,SAAUzG,EAAQwG,SAAUL,OAEvG,wBAAOnD,UAAU,cAAjB,UACE,uBAAOyB,KAAK,WAAWjC,MAAOxC,EAAQwG,SAAUD,IADlD,0CAKF,wBAAQvD,UAAU,iEAAiEF,QAASsD,EAAkBK,SAAUvG,EAAxH,sCAGA,wBAAQ8C,UAAU,iEAAiEF,QAASuD,EAAgBI,SAAUvG,EAAtH,0BAGA,wBAAQ8C,UAAU,iEAAiEF,QAASwD,EAA5F,SACGrG,EAAa,eAAO,qBCjCdyG,MAvBf,WACE,OACE,qCACE,iCACE,oBAAI1D,UAAU,2BAAd,0DAEF,sBAAMA,UAAU,GAAhB,SACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2D,KAAK,IAAIC,OAAK,EAACC,UAAWxC,IACjC,cAAC,IAAD,CAAOsC,KAAK,eAAeC,OAAK,EAACC,UAAW/F,IAC5C,cAAC,IAAD,CAAO6F,KAAK,iBAAiBC,OAAK,EAACC,UAAWvD,IAC9C,cAAC,IAAD,CAAOqD,KAAK,kBAAkBC,OAAK,EAACC,UAAW5C,kBClB7D6C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.635dd29e.chunk.js","sourcesContent":["import { useReducer } from 'react';\n\nexport function useForceUpdate() {\n  const [, forceUpdate] = useReducer((v) => v + 1, 0);\n  return forceUpdate;\n}\n","import React from 'react';\n\nexport const defaultConfig = {\n  // 数据数量\n  count: 100,\n  data: [],\n  // 延迟 单位 ms\n  delay: 100,\n  useRAF: false,\n  // 是否继续\n  isContinue: true,\n  // 是否在排序\n  isSorting: false,\n} as any;\nconst ConfigContext = React.createContext(defaultConfig);\n\nexport default ConfigContext;\n","import { useEffect, useRef } from 'react';\n\ninterface UseConfigInterface {\n  isContinue: boolean;\n  isSorting: boolean;\n  useRAF: boolean;\n  delay: number;\n}\n\nexport function useConfig({ isContinue, isSorting, useRAF, delay }: UseConfigInterface) {\n  const isSortingRef = useRef(false);\n  const isContinueRef = useRef(true);\n  const useRAFRef = useRef(false);\n  const delayRef = useRef(100);\n\n  useEffect(() => {\n    isContinueRef.current = isContinue;\n  }, [isContinue]);\n\n  useEffect(() => {\n    isSortingRef.current = isSorting;\n  }, [isSorting]);\n\n  useEffect(() => {\n    useRAFRef.current = useRAF;\n  }, [useRAF]);\n\n  useEffect(() => {\n    delayRef.current = delay;\n  }, [delay]);\n\n  return { isSortingRef, isContinueRef, useRAFRef, delayRef };\n}\n","import classnames from 'classnames';\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useForceUpdate } from '../hooks/useForceUpdate';\nimport ConfigContext from '../contexts/ConfigContext';\nimport { useConfig } from '../hooks/useConfig';\n\ninterface ItemData {\n  status?: 'current' | 'finished' | 'target';\n  value: number;\n}\n\nconst BubbleSort = () => {\n  const { count, data, delay, isContinue, isSorting, useRAF } = useContext(ConfigContext);\n  const history = useHistory();\n  const [arr, setArr] = useState<ItemData[]>([]);\n  const forceUpdate = useForceUpdate();\n  const { isSortingRef, isContinueRef, useRAFRef, delayRef } = useConfig({ isContinue, isSorting, useRAF, delay });\n\n  const arrRef = useRef<ItemData[]>([]);\n  arrRef.current = arr;\n  const iRef = useRef<number>(0);\n  const jRef = useRef<number>(0);\n  const currentCountRef = useRef(0);\n\n  const shouldSwapRef = useRef(false);\n\n  const init = useCallback(() => {\n    isSortingRef.current = false;\n    iRef.current = 0;\n    jRef.current = 0;\n    currentCountRef.current = 0;\n  }, [isSortingRef]);\n  const changeData = useCallback(() => {\n    setArr(JSON.parse(JSON.stringify(data)));\n    init();\n  }, [data, init]);\n\n  useEffect(() => {\n    changeData();\n  }, [changeData]);\n\n  const bubbleSort = useCallback((list: ItemData[]): ItemData[] => {\n    const i = iRef.current;\n    if (i < list.length) {\n      const j = jRef.current;\n      if (j < list.length - i - 1) {\n        if (list[j - 1]) {\n          list[j - 1].status = undefined;\n        }\n        list[j].status = 'current';\n        list[j + 1].status = 'target';\n        jRef.current++;\n        if (list[j].value > list[j + 1].value) {\n          if (shouldSwapRef.current) {\n            list[j].status = 'target';\n            list[j + 1].status = 'current';\n            const swap = list[j].value;\n            list[j].value = list[j + 1].value;\n            list[j + 1].value = swap;\n            shouldSwapRef.current = false;\n          } else {\n            jRef.current--;\n            shouldSwapRef.current = true;\n          }\n        }\n      } else {\n        iRef.current++;\n        jRef.current = 0;\n        if (list[j - 1]) {\n          list[j - 1].status = undefined;\n        }\n        list[j].status = 'finished';\n        currentCountRef.current++;\n      }\n      return [...list];\n    }\n    return [...list];\n  }, []);\n\n  const sortData = useCallback(() => {\n    if (!isContinueRef.current) return;\n    isSortingRef.current = true;\n    const result = bubbleSort(arrRef.current);\n    setArr(result);\n    if (currentCountRef.current !== result.length) {\n      useRAFRef.current ? requestAnimationFrame(sortData) : setTimeout(sortData, delayRef.current);\n    } else {\n      init();\n      forceUpdate();\n    }\n  }, [bubbleSort, delayRef, forceUpdate, init, isContinueRef, isSortingRef, useRAFRef]);\n  useEffect(() => {\n    if (isContinue && isSortingRef.current) {\n      sortData();\n    }\n  }, [isContinue, sortData, isSorting, isSortingRef]);\n\n  return (\n    <div>\n      <p onClick={() => history.push('/bubble-sort')}>冒泡排序</p>\n      <div>\n        <div className='flex items-center justify-center'>\n          <div className='current w-6 h-6' />\n          当前\n          <div className='target w-6 h-6 ml-2' />\n          正在比较\n          <div className='finished w-6 h-6 ml-2' />\n          结束比较\n        </div>\n      </div>\n      <div className='m-20'>\n        {arr.map((i) => {\n          return (\n            <div\n              className={classnames('bg-black inline-block ml-px', i.status)}\n              key={i.value}\n              style={{\n                width: `calc(${100 / count}% - 1px)`,\n                height: `${i.value}px`,\n              }}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default BubbleSort;\n","import classnames from 'classnames';\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useForceUpdate } from '../hooks/useForceUpdate';\nimport ConfigContext from '../contexts/ConfigContext';\nimport { useConfig } from '../hooks/useConfig';\n\ninterface ItemData {\n  status?: 'current' | 'finished' | 'target';\n  value: number;\n}\n\nconst CocktailSort = () => {\n  const { count, data, delay, isContinue, isSorting, useRAF } = useContext(ConfigContext);\n  const history = useHistory();\n  const [arr, setArr] = useState<ItemData[]>([]);\n  const forceUpdate = useForceUpdate();\n  const { isSortingRef, isContinueRef, useRAFRef, delayRef } = useConfig({ isContinue, isSorting, useRAF, delay });\n\n  const arrRef = useRef<ItemData[]>([]);\n  arrRef.current = arr;\n  const leftRef = useRef(0);\n  const rightRef = useRef(0);\n  const iRef = useRef(0);\n  const jRef = useRef<number>(0);\n  const directionRef = useRef('toRight');\n  const shouldLeftSwapRef = useRef(false);\n  const shouldRightSwapRef = useRef(false);\n  const currentCountRef = useRef(0);\n  // 表示向左是否有序\n  const isSortedToLeftRef = useRef(true);\n  // 表示向右是否有序\n  const isSortedToRightRef = useRef(true);\n\n  const init = useCallback((dataLength: number) => {\n    leftRef.current = 0;\n    rightRef.current = dataLength - 1;\n    iRef.current = 0;\n    jRef.current = 0;\n    currentCountRef.current = 0;\n    isSortedToLeftRef.current = true;\n    isSortedToRightRef.current = true;\n    directionRef.current = 'toRight';\n\n    shouldLeftSwapRef.current = false;\n    shouldRightSwapRef.current = false;\n  }, []);\n  const changeData = useCallback(() => {\n    setArr(JSON.parse(JSON.stringify(data)));\n    init(data.length);\n  }, [data, init]);\n\n  useEffect(() => {\n    changeData();\n  }, [changeData]);\n\n  const cocktailSort = useCallback((list: ItemData[]): ItemData[] => {\n    let left = leftRef.current;\n    let right = rightRef.current;\n\n    if (left < right) {\n      // 向右\n      if (directionRef.current === 'toRight') {\n        let i = iRef.current;\n        if (i < list.length - left - 1) {\n          if (list[i - 1] && list[i - 1].status !== 'finished') {\n            list[i - 1].status = undefined;\n          }\n          list[i].status = 'current';\n          list[i + 1].status = 'target';\n          iRef.current++;\n          if (list[i].value > list[i + 1].value) {\n            if (shouldLeftSwapRef.current) {\n              list[i].status = 'target';\n              list[i + 1].status = 'current';\n              const swap = list[i + 1].value;\n              list[i + 1].value = list[i].value;\n              list[i].value = swap;\n              shouldLeftSwapRef.current = false;\n              isSortedToRightRef.current = false;\n            } else {\n              iRef.current--;\n              shouldLeftSwapRef.current = true;\n              isSortedToRightRef.current = true;\n            }\n          }\n          directionRef.current = 'toRight';\n          return [...list];\n        }\n        directionRef.current = 'toLeftStart';\n      }\n\n      if (directionRef.current === 'toLeftStart') {\n        list[iRef.current].status = 'finished';\n        directionRef.current = 'toLeft';\n        isSortedToLeftRef.current = true;\n        rightRef.current--;\n        jRef.current = rightRef.current;\n        currentCountRef.current++;\n        return [...list];\n      }\n      if (isSortedToRightRef.current) {\n        currentCountRef.current = list.length;\n        return list.map((i) => ({ ...i, status: 'finished' }));\n      }\n\n      if (directionRef.current === 'toLeft') {\n        // 向左\n        let j = jRef.current;\n        if (j > left) {\n          if (list[j + 1] && list[j + 1].status !== 'finished') {\n            list[j + 1].status = undefined;\n          }\n          list[j].status = 'current';\n          list[j - 1].status = 'target';\n          jRef.current--;\n          if (list[j - 1].value > list[j].value) {\n            list[j].status = 'target';\n            list[j - 1].status = 'current';\n            if (shouldRightSwapRef.current) {\n              const swap = list[j].value;\n              list[j].value = list[j - 1].value;\n              list[j - 1].value = swap;\n              shouldRightSwapRef.current = false;\n              isSortedToLeftRef.current = false;\n            } else {\n              jRef.current++;\n              shouldRightSwapRef.current = true;\n              isSortedToLeftRef.current = true;\n            }\n          }\n          directionRef.current = 'toLeft';\n          return [...list];\n        }\n        directionRef.current = 'toRightStart';\n      }\n\n      if (directionRef.current === 'toRightStart') {\n        list[jRef.current].status = 'finished';\n        directionRef.current = 'toRight';\n        isSortedToRightRef.current = true;\n        leftRef.current++;\n        iRef.current = leftRef.current;\n        jRef.current = rightRef.current;\n        currentCountRef.current++;\n        return [...list];\n      }\n      if (isSortedToLeftRef.current) {\n        currentCountRef.current = list.length;\n        return list.map((i) => ({ ...i, status: 'finished' }));\n      }\n\n      return [...list];\n    }\n    list[left].status = 'finished';\n    return [...list];\n  }, []);\n\n  const sortData = useCallback(() => {\n    if (!isContinueRef.current) return;\n    isSortingRef.current = true;\n    const result = cocktailSort(arrRef.current);\n    setArr(result);\n    if (currentCountRef.current !== result.length) {\n      useRAFRef.current ? requestAnimationFrame(sortData) : setTimeout(sortData, delayRef.current);\n    } else {\n      init(result.length);\n      forceUpdate();\n    }\n  }, [cocktailSort, delayRef, forceUpdate, init, isContinueRef, isSortingRef, useRAFRef]);\n  useEffect(() => {\n    if (isContinue && isSortingRef.current) {\n      sortData();\n    }\n  }, [isContinue, sortData, isSorting, isSortingRef]);\n\n  return (\n    <div>\n      <p onClick={() => history.push('/cocktail-sort')}>鸡尾酒排序</p>\n      <div>\n        <div className='flex items-center justify-center'>\n          <div className='current w-6 h-6' />\n          当前\n          <div className='target w-6 h-6 ml-2' />\n          正在比较\n          <div className='finished w-6 h-6 ml-2' />\n          结束比较\n        </div>\n      </div>\n      <div className='m-20'>\n        {arr.map((i) => {\n          return (\n            <div\n              className={classnames('bg-black inline-block ml-px', i.status)}\n              key={i.value}\n              style={{\n                width: `calc(${100 / count}% - 1px)`,\n                height: `${i.value}px`,\n              }}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default CocktailSort;\n","import classnames from 'classnames';\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useForceUpdate } from '../hooks/useForceUpdate';\nimport ConfigContext from '../contexts/ConfigContext';\nimport { useConfig } from '../hooks/useConfig';\n\ninterface ItemData {\n  status?: 'current' | 'finished' | 'target';\n  value: number;\n}\n\nconst SelectionSort = () => {\n  const { count, data, delay, isContinue, isSorting, useRAF } = useContext(ConfigContext);\n  const history = useHistory();\n  const [arr, setArr] = useState<ItemData[]>([]);\n  const forceUpdate = useForceUpdate();\n  const { isSortingRef, isContinueRef, useRAFRef, delayRef } = useConfig({ isContinue, isSorting, useRAF, delay });\n\n  const arrRef = useRef<ItemData[]>([]);\n  arrRef.current = arr;\n  const iRef = useRef<number>(0);\n  const jRef = useRef<number>(1);\n  const minIndexRef = useRef(0);\n  const currentCountRef = useRef(0);\n\n  const init = useCallback(() => {\n    isSortingRef.current = false;\n    iRef.current = 0;\n    jRef.current = 1;\n    minIndexRef.current = 0;\n    currentCountRef.current = 0;\n  }, [isSortingRef]);\n  const changeData = useCallback(() => {\n    setArr(JSON.parse(JSON.stringify(data)));\n    init();\n  }, [data, init]);\n\n  useEffect(() => {\n    changeData();\n  }, [changeData]);\n\n  const selectionSort = useCallback((list: ItemData[]): ItemData[] => {\n    if (iRef.current === 0) {\n      // 首次遍历时应该设置第一个的状态\n      list[minIndexRef.current].status = 'target';\n    }\n    if (iRef.current < list.length - 1) {\n      const minIndex = minIndexRef.current;\n      const j = jRef.current;\n      if (j < list.length) {\n        if (list[j - 1] && list[j - 1].status === 'current') {\n          list[j - 1].status = undefined;\n        }\n        list[j].status = 'current';\n        if (list[j].value < list[minIndex].value) {\n          list[minIndex].status = undefined;\n          minIndexRef.current = j;\n          list[minIndexRef.current].status = 'target';\n        }\n        jRef.current++;\n      } else {\n        if (minIndex !== iRef.current) {\n          const swap = list[minIndex].value;\n          list[minIndex].value = list[iRef.current].value;\n          list[iRef.current].value = swap;\n          list[minIndex].status = undefined;\n        }\n        list[iRef.current].status = 'finished';\n        list[jRef.current - 1].status = undefined;\n        iRef.current++;\n        minIndexRef.current = iRef.current;\n        jRef.current = iRef.current + 1;\n        currentCountRef.current++;\n        list[minIndexRef.current].status = 'target';\n      }\n      return [...list];\n    }\n    list[iRef.current].status = 'finished';\n    currentCountRef.current++;\n    return [...list];\n  }, []);\n\n  const sortData = useCallback(() => {\n    if (!isContinueRef.current) return;\n    isSortingRef.current = true;\n    const result = selectionSort(arrRef.current);\n    setArr(result);\n    if (currentCountRef.current !== result.length) {\n      useRAFRef.current ? requestAnimationFrame(sortData) : setTimeout(sortData, delayRef.current);\n    } else {\n      init();\n      forceUpdate();\n    }\n  }, [selectionSort, delayRef, forceUpdate, init, isContinueRef, isSortingRef, useRAFRef]);\n  useEffect(() => {\n    if (isContinue && isSortingRef.current) {\n      sortData();\n    }\n  }, [isContinue, sortData, isSorting, isSortingRef]);\n\n  return (\n    <div>\n      <p onClick={() => history.push('/selection-sort')}>选择排序</p>\n      <div>\n        <div className='flex items-center justify-center'>\n          <div className='current w-6 h-6' />\n          当前\n          <div className='target w-6 h-6 ml-2' />\n          正在比较\n          <div className='finished w-6 h-6 ml-2' />\n          结束比较\n        </div>\n      </div>\n      <div className='m-20'>\n        {arr.map((i) => {\n          return (\n            <div\n              className={classnames('bg-black inline-block ml-px', i.status)}\n              key={i.value}\n              style={{\n                width: `calc(${100 / count}% - 1px)`,\n                height: `${i.value}px`,\n              }}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default SelectionSort;\n","import React from 'react';\nimport BubbleSort from './BubbleSort';\nimport CocktailSort from './CocktailSort';\nimport SelectionSort from './SelectionSort';\n\nconst AllSort = () => {\n  return (\n    <div>\n      <BubbleSort />\n      <CocktailSort />\n      <SelectionSort />\n    </div>\n  );\n};\n\nexport default AllSort;\n","import React, { FC, useReducer } from 'react';\nimport ConfigContext, { defaultConfig } from '../contexts/ConfigContext';\n\nfunction reducer(state: any, action: any) {\n  switch (action.type) {\n    case 'init':\n      return { ...defaultConfig };\n    case 'changeData':\n      return { ...state, data: action.payload };\n    case 'changeCount':\n      return { ...state, count: action.payload };\n    case 'changeDelay':\n      return { ...state, delay: action.payload };\n    case 'toggleContinue':\n      return { ...state, isContinue: !state.isContinue };\n    case 'toggleSorting':\n      return { ...state, isSorting: !state.isSorting };\n    case 'toggleUseRAF':\n      return { ...state, useRAF: !state.useRAF };\n    default:\n      return { ...state, ...action };\n  }\n}\nconst ConfigProvider: FC = ({ children }) => {\n  const [config, dispatch] = useReducer(reducer, defaultConfig);\n  return <ConfigContext.Provider value={{ ...config, dispatch }}>{children}</ConfigContext.Provider>;\n};\n\nexport default ConfigProvider;\n","// 生成常规数组\nexport function generateArray(length: number, seed = false): number[] {\n  return new Array(length).fill(0).map((item, index) => index + (seed ? 0 : Math.random() * 200));\n}\n\n// 生成乱序数组\nexport function generateOutOfOrderArray(length: number, seed = false): number[] {\n  return shuffle(generateArray(length, seed));\n}\n\n// 洗牌算法\nexport function shuffle(array: number[]): number[] {\n  let arrayLength = array.length,\n    randomIndex, //随机数\n    tempItem; //临时存储元素\n  for (let i = arrayLength - 1; i >= 0; i--) {\n    randomIndex = Math.floor(Math.random() * (i + 1));\n    tempItem = array[randomIndex];\n    array[randomIndex] = array[i];\n    array[i] = tempItem;\n  }\n  return array;\n}\n","import React, { useCallback, useContext, useEffect } from 'react';\nimport ConfigContext from '../contexts/ConfigContext';\nimport { generateOutOfOrderArray } from '../utils/GenerateData';\n\nconst Configurator = () => {\n  const { count, delay, useRAF, isSorting, isContinue, dispatch } = useContext(ConfigContext);\n\n  const handleCountChange = useCallback(\n    (event) => {\n      dispatch({ type: 'changeCount', payload: Number(event.target.value) });\n    },\n    [dispatch],\n  );\n\n  const handleDelayChange = useCallback(\n    (event) => {\n      dispatch({ type: 'changeDelay', payload: Number(event.target.value) });\n    },\n    [dispatch],\n  );\n\n  const handleDataChange = useCallback(() => {\n    dispatch({ type: 'changeData', payload: generateOutOfOrderArray(count).map((i) => ({ value: i })) });\n  }, [dispatch, count]);\n\n  const handleDataSort = useCallback(() => {\n    dispatch({ type: 'toggleSorting' });\n  }, [dispatch]);\n\n  const handleSortContinue = useCallback(() => {\n    dispatch({ type: 'toggleContinue' });\n  }, [dispatch]);\n\n  const handleRequestAnimationFrameChange = useCallback(() => {\n    dispatch({ type: 'toggleUseRAF' });\n  }, [dispatch]);\n\n  useEffect(() => {\n    handleDataChange();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className='m-10'>\n      <div className='flex'>\n        <label className='flex-1'>\n          数据数量：\n          <input type='number' value={count || ''} onChange={handleCountChange} disabled={isSorting} />\n        </label>\n        <label className='flex-1'>\n          延迟：\n          <input className='disabled:opacity-50' type='number' value={delay || ''} disabled={useRAF} onChange={handleDelayChange} />\n        </label>\n        <label className='flex-1 mr-1'>\n          <input type='checkbox' value={useRAF} onChange={handleRequestAnimationFrameChange} />\n          启用requestAnimationFrame\n        </label>\n      </div>\n      <button className='rounded-md p-1 bg-blue-400 text-white mr-1 disabled:opacity-50' onClick={handleDataChange} disabled={isSorting}>\n        更换数据\n      </button>\n      <button className='rounded-md p-1 bg-blue-400 text-white mr-1 disabled:opacity-50' onClick={handleDataSort} disabled={isSorting}>\n        开始\n      </button>\n      <button className='rounded-md p-1 bg-blue-400 text-white mr-1 disabled:opacity-50' onClick={handleSortContinue}>\n        {isContinue ? '暂停' : '继续'}\n      </button>\n    </div>\n  );\n};\n\nexport default Configurator;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport BubbleSort from './pages/BubbleSort';\nimport AllSort from './pages/AllSort';\nimport ConfigProvider from './components/ConfigProvider';\nimport Configurator from './components/Configurator';\nimport CocktailSort from './pages/CocktailSort';\nimport SelectionSort from './pages/SelectionSort';\n\nfunction App() {\n  return (\n    <>\n      <header>\n        <h1 className='m-0 text-center text-2xl'>排序算法可视化</h1>\n      </header>\n      <main className=''>\n        <ConfigProvider>\n          <Configurator />\n          <HashRouter>\n            <Switch>\n              <Route path='/' exact component={AllSort} />\n              <Route path='/bubble-sort' exact component={BubbleSort} />\n              <Route path='/cocktail-sort' exact component={CocktailSort} />\n              <Route path='/selection-sort' exact component={SelectionSort} />\n            </Switch>\n          </HashRouter>\n        </ConfigProvider>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}